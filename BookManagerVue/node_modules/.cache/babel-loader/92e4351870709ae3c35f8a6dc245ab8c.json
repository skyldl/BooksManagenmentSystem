{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\src\\permission.js","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\src\\permission.js","mtime":1676974401527},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\babel.config.js","mtime":1676974401511},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676988577868},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\BookManagerVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1676988577850}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiRDovV29yay9Xb3JrU3BhY2UvR2l0V29ya1NwYWNlL1RlblNob3AvcmVzb3VyY2UvQm9va01hbmFnZXIvQm9va01hbmFnZXJWdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yUnVudGltZS5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6L1dvcmsvV29ya1NwYWNlL0dpdFdvcmtTcGFjZS9UZW5TaG9wL3Jlc291cmNlL0Jvb2tNYW5hZ2VyL0Jvb2tNYW5hZ2VyVnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1dvcmsvV29ya1NwYWNlL0dpdFdvcmtTcGFjZS9UZW5TaG9wL3Jlc291cmNlL0Jvb2tNYW5hZ2VyL0Jvb2tNYW5hZ2VyVnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgppbXBvcnQgJ25wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzJzsgLy8gcHJvZ3Jlc3MgYmFyIHN0eWxlCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsgLy8gZ2V0IHRva2VuIGZyb20gY29va2llCmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZSc7Ck5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbicsICcvcmVnaXN0ZXInXTsgLy8g5rKh5pyJ6YeN5a6a5ZCR55m95ZCN5Y2VCgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIGhhc1Rva2VuLCBoYXNSb2xlcywgX3lpZWxkJHN0b3JlJGRpc3BhdGNoLCByb2xlcywgYWNjZXNzUm91dGVzOwogICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyfgogICAgICAgICAgTlByb2dyZXNzLnN0YXJ0KCk7CgogICAgICAgICAgLy8gc2V0IHBhZ2UgdGl0bGUKICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOwoKICAgICAgICAgIC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4KICAgICAgICAgIGhhc1Rva2VuID0gZ2V0VG9rZW4oKTsKICAgICAgICAgIGlmICghaGFzVG9rZW4pIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM1OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIGlmICghKHRvLnBhdGggPT09ICcvbG9naW4nKSkgewogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICAvLyBpZiBpcyBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIHRoZSBob21lIHBhZ2UKICAgICAgICAgIG5leHQoewogICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgIH0pOwogICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgOToKICAgICAgICAgIC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBvYnRhaW5lZCBoaXMgcGVybWlzc2lvbiByb2xlcyB0aHJvdWdoIGdldEluZm8KICAgICAgICAgIGhhc1JvbGVzID0gc3RvcmUuZ2V0dGVycy5yb2xlcyAmJiBzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA+IDA7CiAgICAgICAgICBpZiAoIWhhc1JvbGVzKSB7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzM7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDE0OgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldEluZm8nKTsKICAgICAgICBjYXNlIDE3OgogICAgICAgICAgX3lpZWxkJHN0b3JlJGRpc3BhdGNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIHJvbGVzID0gX3lpZWxkJHN0b3JlJGRpc3BhdGNoLnJvbGVzOwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIxOwogICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCdwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzJywgcm9sZXMpOwogICAgICAgIGNhc2UgMjE6CiAgICAgICAgICBhY2Nlc3NSb3V0ZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgLy8gZHluYW1pY2FsbHkgYWRkIGFjY2Vzc2libGUgcm91dGVzCiAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7CgogICAgICAgICAgLy8gaGFjayBtZXRob2QgdG8gZW5zdXJlIHRoYXQgYWRkUm91dGVzIGlzIGNvbXBsZXRlCiAgICAgICAgICAvLyBzZXQgdGhlIHJlcGxhY2U6IHRydWUsIHNvIHRoZSBuYXZpZ2F0aW9uIHdpbGwgbm90IGxlYXZlIGEgaGlzdG9yeSByZWNvcmQKICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUKICAgICAgICAgIH0pKTsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgMjY6CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjY7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDE0KTsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMDsKICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CiAgICAgICAgY2FzZSAzMDoKICAgICAgICAgIE1lc3NhZ2UuZXJyb3IoX2NvbnRleHQudDAgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgY2FzZSAzMzoKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAvKiBoYXMgbm8gdG9rZW4qLwoKICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgfQogICAgICAgIGNhc2UgMzY6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMTQsIDI2XV0pOwogIH0pKTsKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},{"version":3,"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","to","from","next","hasToken","hasRoles","_yield$store$dispatch","roles","accessRoutes","wrap","_callee$","_context","prev","start","document","title","meta","path","done","getters","length","dispatch","sent","addRoutes","_objectSpread","replace","t0","error","concat","indexOf","stop","_x","_x2","_x3","apply","arguments","afterEach"],"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/BookManager/BookManagerVue/src/permission.js"],"sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css' // progress bar style\r\nimport { getToken } from '@/utils/auth' // get token from cookie\r\nimport getPageTitle from '@/utils/get-page-title'\r\n\r\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\r\n\r\nconst whiteList = ['/login', '/register'] // 没有重定向白名单\r\n\r\nrouter.beforeEach(async(to, from, next) => {\r\n  // start progress bar~\r\n  NProgress.start()\r\n\r\n  // set page title\r\n  document.title = getPageTitle(to.meta.title)\r\n\r\n  // determine whether the user has logged in\r\n  const hasToken = getToken()\r\n\r\n  if (hasToken) {\r\n    if (to.path === '/login') {\r\n      // if is logged in, redirect to the home page\r\n      next({ path: '/' })\r\n      NProgress.done()\r\n    } else {\r\n      // determine whether the user has obtained his permission roles through getInfo\r\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\r\n      if (hasRoles) {\r\n        next()\r\n      } else {\r\n        try {\r\n          // get user info\r\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\r\n          const { roles } = await store.dispatch('user/getInfo')\r\n\r\n          // generate accessible routes map based on roles\r\n          const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\r\n\r\n          // dynamically add accessible routes\r\n          router.addRoutes(accessRoutes)\r\n\r\n          // hack method to ensure that addRoutes is complete\r\n          // set the replace: true, so the navigation will not leave a history record\r\n          next({ ...to, replace: true })\r\n        } catch (error) {\r\n          // remove token and go to login page to re-login\r\n          await store.dispatch('user/resetToken')\r\n          Message.error(error || 'Has Error')\r\n          next(`/login?redirect=${to.path}`)\r\n          NProgress.done()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    /* has no token*/\r\n\r\n    if (whiteList.indexOf(to.path) !== -1) {\r\n      // in the free login whitelist, go directly\r\n      next()\r\n    } else {\r\n      // other pages that do not have permission to access are redirected to the login page.\r\n      next(`/login?redirect=${to.path}`)\r\n      NProgress.done()\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  // finish progress bar\r\n  NProgress.done()\r\n})\r\n"],"mappings":"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"}]}