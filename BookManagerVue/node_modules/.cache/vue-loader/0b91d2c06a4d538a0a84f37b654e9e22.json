{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\src\\views\\borrow\\index.vue?vue&type=template&id=4cd85d52&scoped=true&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\src\\views\\borrow\\index.vue","mtime":1679999910317},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676988577868},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1676988575109},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676988577868},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\BookManager\\src\\BookManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1676988575090}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}